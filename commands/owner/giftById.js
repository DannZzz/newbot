const profileModel = require("../../models/profileSchema");
const {MessageEmbed} = require("discord.js");
const {greenlight, redlight} = require('../../JSON/colours.json');
const { COIN } = require('../../config');
let ownerID = '382906068319076372';
const embed = require('../../embedConstructor');

module.exports = {
  config: {
    name: "gift_by_id",
    description: "",
    category: "",
    aliases: "",
    accessableby: "–î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.",
    usage: "[ID] [–∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç] "
  },
  run: async (bot, message, args) => {
     if(message.member.user.id !== ownerID) return embed(message).setError("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫.").send().then(msg => {msg.delete({timeout: "10000"})});
    if (!args[0]) return embed(message).setError("–£–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞.").send().then(msg => {msg.delete({timeout: "10000"})});

    let user = bot.users.cache.get(args[0]);
    try {
      let profileData = await profileModel.findOne({ userID: user.id });
    } catch {
      return embed(message).setError("–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.").send().then(msg => {msg.delete({timeout: "10000"})});
    }

    if(!args[1]) return embed(message).setError("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å.").send().then(msg => {msg.delete({timeout: "10000"})});
    if(isNaN(args[1])) return embed(message).setError("–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª-–≤–æ –º–æ–Ω–µ—Ç –≤ –≤–∏–¥–µ, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å.").send().then(msg => {msg.delete({timeout: "10000"})});
    if(args[1] > 1000000000) return embed(message).setError("–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ **1.000.000.000**.").send().then(msg => {msg.delete({timeout: "10000"})});
    if(args[1] < 10) return embed(message).setError("–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ **10**.").send().then(msg => {msg.delete({timeout: "10000"})});

    await profileModel.findOneAndUpdate({userID: user.id}, {$inc: {bank: Math.floor(args[1])}})
    let msg = user.send(embed(message).setPrimary(`**–£ –≤–∞—Å –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞!üéâ**\n\n||---**${Math.floor(args[1])}** ${COIN}---||`))



  }
}
